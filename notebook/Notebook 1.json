{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark0lrgs7e",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0fbfd8fc-b2be-4646-ac89-e76c6520e975"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"7554dfe0-e33a-4159-be98-7b0e685185e8": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "771",
										"1": "Mountain-100 Silver, 38",
										"2": "Mountain Bikes",
										"3": "3399.9900"
									},
									{
										"0": "772",
										"1": "Mountain-100 Silver, 42",
										"2": "Mountain Bikes",
										"3": "3399.9900"
									},
									{
										"0": "773",
										"1": "Mountain-100 Silver, 44",
										"2": "Mountain Bikes",
										"3": "3399.9900"
									},
									{
										"0": "774",
										"1": "Mountain-100 Silver, 48",
										"2": "Mountain Bikes",
										"3": "3399.9900"
									},
									{
										"0": "775",
										"1": "Mountain-100 Black, 38",
										"2": "Mountain Bikes",
										"3": "3374.9900"
									},
									{
										"0": "776",
										"1": "Mountain-100 Black, 42",
										"2": "Mountain Bikes",
										"3": "3374.9900"
									},
									{
										"0": "777",
										"1": "Mountain-100 Black, 44",
										"2": "Mountain Bikes",
										"3": "3374.9900"
									},
									{
										"0": "778",
										"1": "Mountain-100 Black, 48",
										"2": "Mountain Bikes",
										"3": "3374.9900"
									},
									{
										"0": "779",
										"1": "Mountain-200 Silver, 38",
										"2": "Mountain Bikes",
										"3": "2319.9900"
									},
									{
										"0": "780",
										"1": "Mountain-200 Silver, 42",
										"2": "Mountain Bikes",
										"3": "2319.9900"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "ProductID",
										"type": "string"
									},
									{
										"key": "1",
										"name": "ProductName",
										"type": "string"
									},
									{
										"key": "2",
										"name": "Category",
										"type": "string"
									},
									{
										"key": "3",
										"name": "ListPrice",
										"type": "string"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ae7f07f3-73ac-44f1-8784-a5a1a7140d63/resourceGroups/dp203-0lrgs7e/providers/Microsoft.Synapse/workspaces/synapse0lrgs7e/bigDataPools/spark0lrgs7e",
				"name": "spark0lrgs7e",
				"type": "Spark",
				"endpoint": "https://synapse0lrgs7e.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark0lrgs7e",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://files@datalake0lrgs7e.dfs.core.windows.net/products/products.csv', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					"  , header=True\r\n",
					")\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"delta_table_path = \"/delta/products-delta\"\r\n",
					"df.write.format(\"delta\").save(delta_table_path)"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from delta.tables import *\r\n",
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"# Create a deltaTable object\r\n",
					"deltaTable = DeltaTable.forPath(spark, delta_table_path)\r\n",
					"\r\n",
					"# Update the table (reduce price of product 771 by 10%)\r\n",
					"deltaTable.update(\r\n",
					"    condition = \"ProductID == 771\",\r\n",
					"    set = { \"ListPrice\": \"ListPrice * 0.9\" })\r\n",
					"\r\n",
					"# View the updated data as a dataframe\r\n",
					"deltaTable.toDF().show(10)"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"new_df = spark.read.format(\"delta\").load(delta_table_path)\r\n",
					"new_df.show(10)"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"deltaTable.history(10).show(20, False, True)"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(\"CREATE DATABASE AdventureWorks\")\r\n",
					"spark.sql(\"CREATE TABLE AdventureWorks.ProductsExternal USING DELTA LOCATION '{0}'\".format(delta_table_path))\r\n",
					"spark.sql(\"DESCRIBE EXTENDED AdventureWorks.ProductsExternal\").show(truncate=False)"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"USE AdventureWorks;\r\n",
					"\r\n",
					"SELECT * FROM ProductsExternal;"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.write.format(\"delta\").saveAsTable(\"AdventureWorks.ProductsManaged\")\r\n",
					"spark.sql(\"DESCRIBE EXTENDED AdventureWorks.ProductsManaged\").show(truncate=False)"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"USE AdventureWorks;\r\n",
					"\r\n",
					"SELECT * FROM ProductsManaged;"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"USE AdventureWorks;\r\n",
					"\r\n",
					"SHOW TABLES;"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"USE AdventureWorks;\r\n",
					"\r\n",
					"DROP TABLE IF EXISTS ProductsExternal;\r\n",
					"DROP TABLE IF EXISTS ProductsManaged;"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"USE AdventureWorks;\r\n",
					"\r\n",
					"CREATE TABLE Products\r\n",
					"USING DELTA\r\n",
					"LOCATION '/delta/products-delta';"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"USE AdventureWorks;\r\n",
					"\r\n",
					"SELECT * FROM Products;"
				],
				"execution_count": 14
			}
		]
	}
}